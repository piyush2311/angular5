{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/config.ts","./src/app/core/footer/footer.component.html","./src/app/core/footer/footer.component.scss","./src/app/core/footer/footer.component.ts","./src/app/core/navbar/navbar.component.html","./src/app/core/navbar/navbar.component.scss","./src/app/core/navbar/navbar.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.scss","./src/app/dashboard/dashboard.component.ts","./src/app/data.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/login/login.component.html","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/shared.service.ts","./src/app/shared/sdk/index.ts","./src/app/shared/sdk/lb.config.ts","./src/app/shared/sdk/models/BaseModels.ts","./src/app/shared/sdk/models/FireLoop.ts","./src/app/shared/sdk/models/FireLoopRef.ts","./src/app/shared/sdk/models/Member.ts","./src/app/shared/sdk/models/Test.ts","./src/app/shared/sdk/models/index.ts","./src/app/shared/sdk/services/core/auth.service.ts","./src/app/shared/sdk/services/core/base.service.ts","./src/app/shared/sdk/services/core/error.service.ts","./src/app/shared/sdk/services/core/index.ts","./src/app/shared/sdk/services/core/io.service.ts","./src/app/shared/sdk/services/core/real.time.ts","./src/app/shared/sdk/services/core/search.params.ts","./src/app/shared/sdk/services/custom/Member.ts","./src/app/shared/sdk/services/custom/SDKModels.ts","./src/app/shared/sdk/services/custom/Test.ts","./src/app/shared/sdk/services/custom/index.ts","./src/app/shared/sdk/services/custom/logger.service.ts","./src/app/shared/sdk/services/index.ts","./src/app/shared/sdk/sockets/socket.browser.ts","./src/app/shared/sdk/sockets/socket.connections.ts","./src/app/shared/sdk/sockets/socket.driver.ts","./src/app/shared/sdk/storage/cookie.browser.ts","./src/app/shared/sdk/storage/storage.browser.ts","./src/app/shared/sdk/storage/storage.swaps.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AppComponent } from './app.component';\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/login'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DataService } from './data.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SDKBrowserModule } from './shared/sdk/index';\nimport { NavbarComponent } from './core/navbar/navbar.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SharedService } from './shared.service';\nimport { ConfigComponent } from './core/config';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    DashboardComponent,\n    NavbarComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SDKBrowserModule.forRoot()\n  ],\n  exports: [],\n  providers: [DataService, SharedService, ConfigComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, Input, Output } from '@angular/core';\r\nexport class ConfigComponent {\r\n  @Input() apiUrl;\r\n  constructor() {\r\n    this.apiUrl = 'http://192.168.1.107:3022/api';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/config.ts","module.exports = \"<footer>\\n  <div class=\\\"container clearfix\\\">\\n    <div class=\\\"fotr-left\\\">\\n      <p>Copyright &copy; 2017 .  All Rights Reserved</p>\\n    </div>\\n    <div class=\\\"fotr-right\\\">\\n      <ul>\\n        <li><a href=\\\"#\\\"><img src=\\\"/assets/images/facebook-icon.png\\\" alt=\\\"icon\\\"></a></li>\\n        <li><a href=\\\"#\\\"><img src=\\\"/assets/images/twitter-icon.png\\\" alt=\\\"icon\\\"></a></li>\\n        <li><a href=\\\"#\\\"><img src=\\\"/assets/images/linked-icon.png\\\" alt=\\\"icon\\\"></a></li>\\n        <li><a href=\\\"#\\\"><img src=\\\"/assets/images/google-plus-icon.png\\\" alt=\\\"icon\\\"></a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/footer/footer.component.html\n// module id = ./src/app/core/footer/footer.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/footer/footer.component.scss\n// module id = ./src/app/core/footer/footer.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/footer/footer.component.ts","module.exports = \"<div *ngIf=\\\"userDate && userDate.length\\\" class=\\\"hfp-bnb-header\\\">\\n  <div class=\\\"hfp-adm-logo\\\"><a routerLink=\\\"/home\\\"><img src=\\\"/assets/images/logo.png\\\" width=\\\"100%\\\" alt=\\\"logo\\\" /></a></div>\\n  <div class=\\\"hfp-user-acnt\\\"> <a (click)=\\\"isToogleUp ? isToogleUp = false : isToogleUp = true;\\\" id=\\\"open-hfpmenu\\\"><span><img src=\\\"/assets/images/user-img.jpg\\\" width=\\\"100%\\\" alt=\\\"img\\\" /></span> <strong>{{userDate[0].userData.firstName}} {{userDate[0].userData.lastName}} <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></strong></a> </div>\\n  <div class=\\\"clear\\\"></div>\\n</div>\\n\\n<div *ngIf=\\\"userDate && userDate.length\\\" class=\\\"hfp-menu\\\" [ngClass]=\\\"{'hfp-showmenu': isToogleUp}\\\" id=\\\"hfp-menu-box\\\">\\n  <ul>\\n    <li class=\\\"submenu\\\"> <a>Menus <i></i></a>\\n      <ul>\\n        <li><a>Menus 1</a></li>\\n        <li><a>Menus 2</a></li>\\n        <li><a>Menus 3</a></li>\\n        <li><a>Menus 4</a></li>\\n      </ul>\\n    </li>\\n    <li class=\\\"submenu\\\"> <a>Pages <span>25</span> <i></i></a>\\n      <ul>\\n        <li><a>Pages 1</a></li>\\n        <li><a>Pages 2</a></li>\\n      </ul>\\n    </li>\\n    <li class=\\\"submenu\\\"> <a>Folds <i></i></a>\\n      <ul>\\n        <li><a data-toggle=\\\"modal\\\" data-target=\\\".fold-pop\\\">Create Folds</a></li>\\n      </ul>\\n    </li>\\n    <li class=\\\"submenu\\\"> <a class=\\\"\\\">Setting <i></i></a>\\n      <ul>\\n        <li><a>Setting 1</a></li>\\n        <li><a>Setting 2</a></li>\\n      </ul>\\n    </li>\\n    <li> <a (click)=\\\"logout()\\\">Logout </a> </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/navbar/navbar.component.html\n// module id = ./src/app/core/navbar/navbar.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/navbar/navbar.component.scss\n// module id = ./src/app/core/navbar/navbar.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Member, AccessToken} from '../../shared/sdk/models';\nimport { MemberApi } from '../../shared/sdk/services';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../data.service';\nimport { SharedService} from '../../shared.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  isLogin = false;\n  isToggleUp = false;\n  userDate: any = [];\n  constructor(private memberApi: MemberApi,\n              private router: Router,\n              private dataService: DataService,\n              private sharedService: SharedService) { }\n  ngOnInit() {\n    this.isLogin = this.memberApi.isAuthenticated();\n    this.sharedService.session$.subscribe((data) => {\n      if (data && data.length) {\n        this.userDate = data;\n        }\n    });\n  }\n\n  logout() {\n    this.isLogin = false;\n    this.memberApi.logout().subscribe((data) => this.setAuthChanged(false));\n  }\n\n  setAuthChanged(flag) {\n    this.userDate = [];\n    this.dataService.setAutenticationChanged(flag);\n    this.router.navigate(['/login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/navbar/navbar.component.ts","module.exports = \"<section class=\\\"hfp-mid-section\\\">\\n  <div class=\\\"hfp-wrapper\\\">\\n    <div class=\\\"admin-dashboard\\\">\\n      <ul>\\n        <li>\\n          <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n          25<strong>User</strong>\\n        </li>\\n\\n        <li>\\n          <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n          25<strong>Menus  </strong>\\n        </li>\\n\\n\\n        <li>\\n          <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n          25<strong>Page  </strong>\\n        </li>\\n\\n        <li>\\n          <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n          25<strong>Fold  </strong>\\n        </li>\\n\\n        <li>\\n          <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n          25<strong>Article  </strong>\\n        </li>\\n\\n        <li>\\n          <i class=\\\"fa fa-gear\\\" aria-hidden=\\\"true\\\"></i>\\n          25<strong>Setting  </strong>\\n        </li>\\n\\n\\n      </ul>\\n\\n    </div>\\n\\n  </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.scss\n// module id = ./src/app/dashboard/dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { LoopBackConfig, BASE_URL, API_VERSION } from '../shared/sdk';\nimport { Member, AccessToken } from '../shared/sdk/models';\nimport { MemberApi } from '../shared/sdk/services';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  public userData: any = [{isLogin: false, userData: {'firstName': 'piyush', 'lastName': 'kriplani'}}];\n  constructor(private memberApi: MemberApi,\n              private router: Router,\n              private dataService: DataService,\n              private sharedService: SharedService\n  ) {\n    LoopBackConfig.setBaseURL(BASE_URL);\n    LoopBackConfig.setApiVersion(API_VERSION);\n  }\n  ngOnInit() {\n    if (this.memberApi.isAuthenticated()) {\n      this.userData['isLogin'] = true;\n      this.sharedService.setSession(this.userData);\n    } else {\n      this.sharedService.setSession([]);\n    }\n  }\n\n  logout() {\n    this.memberApi.logout().subscribe((data) => {\n      this.router.navigate(['/login']);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { MemberApi } from './shared/sdk/services';\nimport { ConfigComponent } from './core/config';\n\n@Injectable()\nexport class DataService {\n  currentUser: any = null;\n  @Output() authChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  constructor(private http: HttpClient, private memberApi: MemberApi, private config: ConfigComponent) {}\n  getUserList(): Observable<any> {\n    return this.http.get('http://192.168.1.107:3022/api/Members' +\n      '?access_token=eJ37gOsxC3if8BPRvteHrgrnVKkNRcMd8hZoKb2VikrAYkka4UiBsLxo9M6bfz4y');\n  }\n\n  setAutenticationChanged(flag) {\n    this.userAuthChanged(flag);\n  }\n\n  private userAuthChanged(status: boolean) {\n    this.authChanged.emit(status);\n  }\n\n  handleError(error: any) {\n    console.error('server error:', error);\n    if (error instanceof Response) {\n      let errMessage: any = '';\n      try {\n        errMessage = error.json();\n      } catch (err) {\n        errMessage = error.statusText;\n      }\n      return Observable.throw(errMessage);\n    }\n    return Observable.throw(error || 'Node.js server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.service.ts","module.exports = \"<div class=\\\"hfp-mid-section\\\">\\n  <a routerLink=\\\"/login\\\" style=\\\"color: black;\\\">Click here for login</a>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.scss\n// module id = ./src/app/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n  itemCount = 23;\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    // console.log(this.dataService);\n     this.dataService.getUserList().subscribe((data) => {\n       console.log(data);\n     });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"<section class=\\\"hfp-mid-section\\\">\\n\\n  <div class=\\\"user-sign-in\\\">\\n    <h1>Welcome<span> Please Login </span></h1>\\n    <div class=\\\"sign-bg\\\">\\n      <form (ngSubmit)=\\\"login()\\\" #loginForm=\\\"ngForm\\\" class=\\\"login-form\\\">\\n\\n        <div class=\\\"input-fild\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Email\\\" value=\\\"\\\" class=\\\"mail-input\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"addUser.email\\\" name=\\\"email\\\" pattern=\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\\\" required>\\n          <div [hidden]=\\\"email.valid || (email.pristine && !loginForm.submitted)\\\"\\n               class=\\\"alert alert-danger\\\">\\n            Email is required.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"input-fild\\\">\\n          <input type=\\\"password\\\" placeholder=\\\"Password\\\" #password=\\\"ngModel\\\" value=\\\"\\\" class=\\\"password-input\\\" [(ngModel)]=\\\"addUser.password\\\" name=\\\"password\\\" required>\\n          <div [hidden]=\\\"password.valid || (password.pristine && !loginForm.submitted)\\\"\\n               class=\\\"alert alert-danger\\\">\\n            Password is required\\n          </div>\\n        </div>\\n        <div class=\\\"input-submit\\\">\\n          <input type=\\\"submit\\\" value=\\\"Login\\\">\\n        </div>\\n        <div class=\\\" form-bottom-link\\\">\\n          <div class=\\\"rembr\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"radiog_lite\\\" id=\\\"radio1\\\" class=\\\"css-checkbox\\\">\\n            <label for=\\\"radio1\\\" class=\\\"css-label radGroup1\\\">Remember Me</label>\\n          </div>\\n          <a href=\\\"#\\\">Forgot Password?</a><div class=\\\"clear\\\"></div> </div>\\n        <p class=\\\"message\\\">Don’t have an account yet? <a href=\\\"javascript:void(0)\\\">Sign up</a></p>\\n\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.scss\n// module id = ./src/app/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { LoopBackConfig, BASE_URL, API_VERSION } from '../shared/sdk';\nimport { Member, AccessToken } from '../shared/sdk/models';\nimport { MemberApi } from '../shared/sdk/services';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  private addUser: Member = new Member();\n  isLogin = false;\n\n  /**\n   * constructor for depandancy injection\n   * @param memberApi\n   * @param router\n   * @param dataService\n   */\n  constructor(private memberApi: MemberApi,\n              private router: Router,\n              private dataService: DataService) {\n    LoopBackConfig.setBaseURL(BASE_URL);\n    LoopBackConfig.setApiVersion(API_VERSION);\n      if (this.memberApi.isAuthenticated()) {\n        router.navigate(['dashboard']);\n      }\n  }\n\n  /**\n   * onload function\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * login user in portal\n   */\n  private login(): void {\n    this.memberApi.login(this.addUser, {}).subscribe((data) => this.router.navigate(['/dashboard']),\n      (err) => console.log(err));\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class SharedService {\n\n  private session = new Subject<string[]>();\n  session$ = this.session.asObservable();\n\n  constructor() { }\n\n  setSession(userData) {\n    this.session.next(userData);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared.service.ts","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root\n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { JSONSearchParams } from './services/core/search.params';\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { MemberApi } from './services/custom/Member';\nimport { TestApi } from './services/custom/Test';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        JSONSearchParams,\n        SDKModels,\n        RealTime,\n        MemberApi,\n        TestApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\nexport const BASE_URL = 'http://localhost:3024';\nexport const API_VERSION = 'api';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/index.ts","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//192.168.1.107:3022';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/lb.config.ts","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/BaseModels.ts","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/FireLoop.ts","/* tslint:disable */\nimport 'rxjs/add/observable/merge';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/merge';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return Observable.merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().catch((error: any) => Observable.throw(error));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/FireLoopRef.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface MemberInterface {\n  \"username\": string;\n  \"created\"?: Date;\n  \"modified\"?: Date;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: any;\n  \"password\"?: string;\n  accessTokens?: any[];\n}\n\nexport class Member implements MemberInterface {\n  \"username\": string;\n  \"created\": Date;\n  \"modified\": Date;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": any;\n  \"password\": string;\n  accessTokens: any[];\n  constructor(data?: MemberInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Member`.\n   */\n  public static getModelName() {\n    return \"Member\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Member for dynamic purposes.\n  **/\n  public static factory(data: MemberInterface): Member{\n    return new Member(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Member',\n      plural: 'Members',\n      path: 'Members',\n      idName: 'id',\n      properties: {\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"modified\": {\n          name: 'modified',\n          type: 'Date'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'any[]',\n          model: '',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/Member.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface TestInterface {\n  \"fname\"?: string;\n  \"lname\"?: string;\n  \"id\"?: any;\n}\n\nexport class Test implements TestInterface {\n  \"fname\": string;\n  \"lname\": string;\n  \"id\": any;\n  constructor(data?: TestInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Test`.\n   */\n  public static getModelName() {\n    return \"Test\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Test for dynamic purposes.\n  **/\n  public static factory(data: TestInterface): Test{\n    return new Test(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Test',\n      plural: 'Tests',\n      path: 'Tests',\n      idName: 'id',\n      properties: {\n        \"fname\": {\n          name: 'fname',\n          type: 'string',\n          default: ''\n        },\n        \"lname\": {\n          name: 'lname',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/Test.ts","/* tslint:disable */\nexport * from './Member';\nexport * from './Test';\nexport * from './BaseModels';\nexport * from './FireLoopRef';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/models/index.ts","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/auth.service.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Headers, Request, RequestOptions } from '@angular/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { JSONSearchParams } from './search.params';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      // Headers to be sent\n      let headers: Headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      let filter: string = '';\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          filter = `?filter=${ encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n      // Separate where object from url params and add to search query\n      /**\n      CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n      if (urlParams.where) {\n        headers.append('where', JSON.stringify(urlParams.where));\n        delete urlParams.where;\n      }\n      **/\n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${filter}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\n      return this.http.request(request)\n        .map((res: any) => (res.text() != \"\" ? res.json() : {}))\n        .catch((e) => this.errorHandler.handleError(e));\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: Headers): void {\n    if (this.auth.getAccessTokenId()) {\n      headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/base.service.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  public handleError(error: Response): any {\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/error.service.ts","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './search.params';\nexport * from './base.service';\nexport * from './real.time';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/index.ts","/* tslint:disable */\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/io.service.ts","/* tslint:disable */\nimport 'rxjs/add/operator/share';\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().share();\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/real.time.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { URLSearchParams } from '@angular/http';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module JSONSearchParams\n* @license MIT\n* @description\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\n* This module correctly encodes a json object into a query string and then creates\n* an instance of the URLSearchParams component for later use in HTTP Calls\n**/\n@Injectable()\nexport class JSONSearchParams {\n\n    private _usp: URLSearchParams;\n\n    public setJSON(obj: any) {\n        this._usp = new URLSearchParams(this._JSON2URL(obj, false));\n    }\n\n    public getURLSearchParams(): URLSearchParams {\n        return this._usp;\n    }\n\n    private _JSON2URL(obj: any, parent: any) {\n        var parts: any = [];\n        for (var key in obj)\n        parts.push(this._parseParam(key, obj[key], parent));\n        return parts.join('&');\n    }\n\n    private _parseParam(key: string, value: any, parent: string) {\n        let processedKey = parent ? parent + '[' + key + ']' : key;\n        if (value && (<string>(typeof value) === 'object' || Array.isArray(value))) {\n            return this._JSON2URL(value, processedKey);\n        }\n        return processedKey + '=' + value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/core/search.params.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken, AccessToken } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Member } from '../../models/Member';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Member` model.\n */\n@Injectable()\nexport class MemberApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id Member id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id Member id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id Member id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of Member.\n   *\n   * @param {any} id Member id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id Member id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id Member id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of Member.\n   *\n   * @param {any} id Member id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Member id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id Member id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id Member id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Member` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Members/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.Member#getCurrent\n   * @methodOf sdk.Member\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Members\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.Member#login} or\n   * {@link sdk.Member#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.Member#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.Member#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.Member#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Member`.\n   */\n  public getModelName() {\n    return \"Member\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/Member.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { Member } from '../../models/Member';\nimport { Test } from '../../models/Test';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    Member: Member,\n    Test: Test,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/SDKModels.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Test } from '../../models/Test';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Test` model.\n */\n@Injectable()\nexport class TestApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Test` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/tests\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id test id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Test` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/tests/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Test`.\n   */\n  public getModelName() {\n    return \"Test\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/Test.ts","/* tslint:disable */\nexport * from './Member';\nexport * from './Test';\nexport * from './SDKModels';\nexport * from './logger.service';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/index.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/custom/logger.service.ts","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/services/index.ts","/* tslint:disable */\nimport * as io from 'socket.io-client';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/sockets/socket.browser.ts","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().share(),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().share(),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().share(),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().share()\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/sockets/socket.connections.ts","/* tslint:disable */\n/**\n * @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/sockets/socket.driver.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${value}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/storage/cookie.browser.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/storage/storage.browser.ts","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sdk/storage/storage.swaps.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}